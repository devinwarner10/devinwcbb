Netflix$cast == "Denzel Washington"
"Denzel Washington" in Netflix$cast
Netflix$title[(Netflix$type == Movie) && (Netflix$release_year >= 2018)]
Netflix$title[(Netflix$type == Movie) && (Netflix$release_year >= 2018)]
Netflix$type == Movie
Netflix$title[(Netflix$type == "Movie") && (Netflix$release_year >= 2018)]
Netflix$title[(Netflix$type == Movie) && (Netflix$release_year >= 2019)]
Netflix$title[(Netflix$type == "Movie") && (Netflix$release_year >= 2019)]
Netflix$title[Netflix$release_year = 2020]
Netflix$title[Netflix$release_year == 2020]
data.frame(Title = c(Netflix$title), Director = c(Netflix$director), Release_Date = c(Netflix$release_year))
data.frame(Title = c(Netflix$title), Director = c(Netflix$director), Release_Date = c(Netflix$release_year == 2020))
data.frame(Title = c(Netflix$title[Netflix$release_year == 2020)]), Director = c(Netflix$director[Netflix$release_year == 2020)]), Release_Date = c(Netflix$release_year == 2020))
data.frame(Title = c(Netflix$title[Netflix$release_year == 2020]), Director = c(Netflix$director[Netflix$release_year == 2020]), Release_Date = c(Netflix$release_year == 2020))
data.frame(Title = c(Netflix$title[Netflix$release_year == 2020]), Director = c(Netflix$director[Netflix$release_year == 2020]), Release_Date = c(Netflix$release_year == 2020))
Netflix$title[Netflix$cast == "Denzel Washington"]
Netflix$cast
rm(list = ls())
data(heights)
library(dslabs)
data(heights)
options(digits = 3)
variable.names(heights)
mean(heights$height)
ind <- heights$height > mean(heights$height)
sum(ind)
indf <- heights$sex = "Female"
indf <- heights$sex == "Female"
sum(ind & indf)
mean(indf)
min(heights$height)
match(min(heights$height))
help("match")
match(50, heights$height)
heights$sex[1032]
max(heights$height)
x <- heights$height(50:82)
x<- 50:82
x <- heights$height
help(filter)
x <- filter(heights, height(50:82))
x <- filter(heights, heights$height(50:82))
x<- heights$height %in% (50:82)
x
sum(x)
max(heights$height)
min(heights$height)
y <- 50:82
y %in% x
y %in% heights$height
sum(y %in% heights$height)
(count(y) - sum(y %in% heights$height))
total(y)
help("data.frame")
mutate(heights, ht_cm = heights$height * 2.54)
heights2 <- data.frame(mutate(heights, ht_cm = heights$height * 2.54))
help(mutate)
library(dbplyr)
heights2 <- mutate(heights, ht_cm = heights$height * 2.54)
library(dplyr)
library(dplyr)
heights2 <- mutate(heights, ht_cm = heights$height * 2.54)
heights2[18]
heights2$ht_cm[18]
mean(heights2$ht_cm)
sum(indf)
mean(heights2$ht_cm %in% indf)
mean(heights2$ht_cm %in% heights2$sex = "Female")
mean(heights2$ht_cm %in% heights2$sex == "Female")
mean(heights2$ht_cm[heights2$sex == "Female"])
data(olive)
head(olive)
plot(olive$palmitic, olive$palmitoleic)
hist(olive$eicosenoic)
boxplot(palmitic~region, data = olive)
for(i in 1:25){
print(sum(1:i))
}
v
m <- 50
s_n <- function(n){
print(n*(n+1)/2)
}
v <- (length = m)
for(i in 1:25){
v[i] <- s_n[i]
}
for(i in 1:25){
v[i] <- s_n(i)
}
v
m <- 50
s_n <- function(n){
print(n*(n+1)/2)
}
v <- (length = m)
for(i in 1:m){
v[i] <- s_n(i)
}
v
m <- 50
s_n <- function(n){
n*(n+1)/2
}
v <- (length = m)
for(i in 1:m){
v[i] <- s_n(i)
}
v
plot(v)
for(i in 1:m){
v[i] <- s_n(i)
}
n <- 1:m
plot(n, v)
lines(n, sum(1:n))
for(i in 1:m){
v[i] <- s_n(i)
}
n <- 1:m
plot(n, v)
lines(n, n*(n+1)/2)
help(identical)
library(tidyverse)
library(dslabs)
library(dplyr)
data(murders)
hist(murders$total)
data.frame(State = murders$abb, Murder_Rate = (murders$total/murders$population)*10000)
murder_rate <- (murders$total/murders$population)*10000
murders
murder_rate <- (murders$total/murders$population)*1000
data.frame(State = murders$abb, Murder_Rate = murder_rate)
hist(murder_rate)
murders
hist(murders$total)
murder_rate <- murders$total / murders$population *10000
hist(murder_rate)
netflix
Netflix <- read.csv("/Users/devinwarner/Desktop/Kaggle/netflix_titles.
Netflix <- read.csv("/Users/devinwarner/Desktop/Kaggle/netflix_titles.
Netflix <- read.csv("/Users/devinwarner/Desktop/Kaggle/netflix_titles
Netflix <- read.csv("/Users/devinwarner/Desktop/Kaggle/netflix_titles
Netflix <- read.csv("/Users/devinwarner/Desktop/Kaggle/netflix_titles)
group1 = c(6,7,7,9,11,12,13,15)
group2 = c(9,10,10,12,13,16,19,20)
group3 = c(12,12,16,18,19,21,21,22)
groups = data.frame(cbind(group1, group2, group3))
groups
groups_stacked = stack(groups)
groups_stacked
anova_results = aov(values~ind, data=groups_stacked)
summary(anova_results)
1 + 1
print "Hello World"
5 % 2
5%2
getwd()
barplot(t(data),
main = "Proportion Accepted into Grad Programs",
xlab = "Graduate Program", ylab = "Proportion",
col = c("Blue", "Red"),
ylim=c(-.05,1.05),
legend.text = colnames(data),
beside = TRUE) # Grouped bars
library(ggplot2)
men_accepted <- c(511,352,129,137,53,22)
men_denied <- c(314,208,205,270,138,351)
women_accepted <- c(89,17,202,132,95,24)
women_denied <- c(19,8,391,243,298,317)
programs <- c('A', 'B', 'C', 'D', 'E','F')
prop_men_accepted <- men_accepted / (men_accepted + men_denied)
prop_women_accepted <- women_accepted / (women_accepted + women_denied)
names(prop_men_accepted) <- programs
names(prop_women_accepted) <- programs
prop_men_accepted
prop_women_accepted
data <- data.frame(prop_men_accepted, prop_women_accepted)
barplot(t(data),
main = "Proportion Accepted into Grad Programs",
xlab = "Graduate Program", ylab = "Proportion",
col = c("Blue", "Red"),
ylim=c(-.05,1.05),
legend.text = colnames(data),
beside = TRUE) # Grouped bars
install.packages("~/Desktop/github/dshw/Homework_2/devinwcbb")
library(devinwcbb)
run_cbb_shiny()
library(tidyverse)
library(lubridate)
library(shiny)
run_cbb_shiny()
# data <- get_cbb_data()
ui <- fluidPage(
titlePanel("College Basketball Data"),
sidebarLayout(
sidebarPanel(
selectInput('team', 'Teams', team_list(data),
selected = "Southern Utah")
),
mainPanel(
plotOutput("plot1"),
textOutput("text1"),
dataTableOutput("table1")
)
)
)
server <- function(input, output, session) {
team <- reactive({input$team})
output$text1 <- renderPrint({
team_win_record(data,team(),1)
})
output$plot1 <- renderPlot({
bbgraph(data, team())
})
output$table1 <- renderDataTable({
team_filter(data, team())
})
}
shinyApp(ui = ui, server = server)
data <- get_cbb_data()
# data <- get_cbb_data()
ui <- fluidPage(
titlePanel("College Basketball Data"),
sidebarLayout(
sidebarPanel(
selectInput('team', 'Teams', team_list(data),
selected = "Southern Utah")
),
mainPanel(
plotOutput("plot1"),
textOutput("text1"),
dataTableOutput("table1")
)
)
)
server <- function(input, output, session) {
team <- reactive({input$team})
output$text1 <- renderPrint({
team_win_record(data,team(),1)
})
output$plot1 <- renderPlot({
bbgraph(data, team())
})
output$table1 <- renderDataTable({
team_filter(data, team())
})
}
shinyApp(ui = ui, server = server)
setwd("~/Desktop/github/dshw/Homework_2/devinwcbb")
devtools::install()
library(devinwcbb)
data <- get_cbb_data()
run_cbb_shiny()
data <- get_cbb_data()
bbgraph(data, "Southern Utah")
team_filter(data,"Southern Utah")
#'
#' @return tibble
#'
#' @export
#'
#' @examples
#' team_filter(get_cbb_data(), "Southern Utah")
#' team_filter(get_cbb_data(), "Northern Arizona")
#'
#'
team_filter1 <- function(data, team) {
x %>%
filter(data, home == team | vis == team) %>%
mutate("opponent", ifelse(x$home == team, vis, home)) %>%
mutate("teamscore", ifelse(x$home == team, score1, score2)) %>%
mutate("opponentscore",ifelse(x$home == team, score2, score1)) %>%
mutate("scoredifference", teamscore - opponentscore) %>%
select(c("date","opponent", "teamscore", "opponentscore", "location", "scoredifference"))
}
team_filter1(data,"Southern Utah")
#'
#' @return tibble
#'
#' @export
#'
#' @examples
#' team_filter(get_cbb_data(), "Southern Utah")
#' team_filter(get_cbb_data(), "Northern Arizona")
#'
#'
team_filter1 <- function(data, team) {
data %>%
filter(home == team | vis == team) %>%
mutate("opponent", ifelse(x$home == team, vis, home)) %>%
mutate("teamscore", ifelse(x$home == team, score1, score2)) %>%
mutate("opponentscore",ifelse(x$home == team, score2, score1)) %>%
mutate("scoredifference", teamscore - opponentscore) %>%
select(c("date","opponent", "teamscore", "opponentscore", "location", "scoredifference"))
}
team_filter1(data,"Southern Utah")
#'
#' @return tibble
#'
#' @export
#'
#' @examples
#' team_filter(get_cbb_data(), "Southern Utah")
#' team_filter(get_cbb_data(), "Northern Arizona")
#'
#'
team_filter1 <- function(data, team) {
data %>%
filter(home == team | vis == team) %>%
mutate("opponent", ifelse(home == team, vis, home)) %>%
mutate("teamscore", ifelse(home == team, score1, score2)) %>%
mutate("opponentscore",ifelse(home == team, score2, score1)) %>%
mutate("scoredifference", teamscore - opponentscore) %>%
select(c("date","opponent", "teamscore", "opponentscore", "location", "scoredifference"))
}
team_filter1(data,"Southern Utah")
#'
#' @return tibble
#'
#' @export
#'
#' @examples
#' team_filter(get_cbb_data(), "Southern Utah")
#' team_filter(get_cbb_data(), "Northern Arizona")
#'
#'
team_filter1 <- function(data, team) {
data %>%
filter(home == team | vis == team) %>%
mutate("opponent", ifelse(home == team, vis, home)) %>%
mutate("teamscore", ifelse(home == team, score1, score2)) %>%
mutate("opponentscore",ifelse(home == team, score2, score1)) %>%
mutate("scoredifference", data$teamscore - data$opponentscore) %>%
select(c("date","opponent", "teamscore", "opponentscore", "location", "scoredifference"))
}
team_filter1(data,"Southern Utah")
#'
#' @return tibble
#'
#' @export
#'
#' @examples
#' team_filter(get_cbb_data(), "Southern Utah")
#' team_filter(get_cbb_data(), "Northern Arizona")
#'
#'
team_filter1 <- function(data, team) {
data %>%
filter(home == team | vis == team) %>%
mutate("opponent", ifelse(home == team, vis, home)) %>%
mutate("teamscore", ifelse(home == team, score1, score2)) %>%
mutate("opponentscore",ifelse(home == team, score2, score1)) %>%
mutate("scoredifference", teamscore - opponentscore) %>%
select(c("date","opponent", "teamscore", "opponentscore", "location", "scoredifference"))
}
team_filter1(data,"Southern Utah")
?mutate
#'
#' @return tibble
#'
#' @export
#'
#' @examples
#' team_filter(get_cbb_data(), "Southern Utah")
#' team_filter(get_cbb_data(), "Northern Arizona")
#'
#'
team_filter1 <- function(data, team) {
data %>%
filter(home == team | vis == team) %>%
mutate(opponent, ifelse(home == team, vis, home)) %>%
mutate(teamscore, ifelse(home == team, score1, score2)) %>%
mutate(opponentscore,ifelse(home == team, score2, score1)) %>%
mutate(scoredifference, teamscore - opponentscore) %>%
select(c("date","opponent", "teamscore", "opponentscore", "location", "scoredifference"))
}
?mutate
team_filter1(data,"Southern Utah")
rlang::last_error()
#'
#' @return tibble
#'
#' @export
#'
#' @examples
#' team_filter(get_cbb_data(), "Southern Utah")
#' team_filter(get_cbb_data(), "Northern Arizona")
#'
#'
team_filter1 <- function(data, team) {
x <- data
x %>%
filter(home == team | vis == team) %>%
mutate(opponent, ifelse(home == team, vis, home)) %>%
mutate(teamscore, ifelse(home == team, score1, score2)) %>%
mutate(opponentscore,ifelse(home == team, score2, score1)) %>%
mutate(scoredifference, teamscore - opponentscore) %>%
select(c("date","opponent", "teamscore", "opponentscore", "location", "scoredifference"))
}
team_filter1(data,"Southern Utah")
#'
#' @return tibble
#'
#' @export
#'
#' @examples
#' team_filter(get_cbb_data(), "Southern Utah")
#' team_filter(get_cbb_data(), "Northern Arizona")
#'
#'
team_filter1 <- function(data, team) {
x <- data
x %>%
filter(home == team | vis == team) %>%
mutate("opponent", ifelse(home == team, vis, home)) %>%
mutate(teamscore, ifelse(home == team, score1, score2)) %>%
mutate(opponentscore,ifelse(home == team, score2, score1)) %>%
mutate(scoredifference, teamscore - opponentscore) %>%
select(c("date","opponent", "teamscore", "opponentscore", "location", "scoredifference"))
}
team_filter1(data,"Southern Utah")
#'
#' @return tibble
#'
#' @export
#'
#' @examples
#' team_filter(get_cbb_data(), "Southern Utah")
#' team_filter(get_cbb_data(), "Northern Arizona")
#'
#'
team_filter1 <- function(data, team) {
x <- data
x %>%
filter(home == team | vis == team) %>%
mutate("opponent", ifelse(home == team, vis, home)) %>%
mutate("teamscore", ifelse(home == team, score1, score2)) %>%
mutate("opponentscore",ifelse(home == team, score2, score1)) %>%
mutate("scoredifference", teamscore - opponentscore) %>%
select(c("date","opponent", "teamscore", "opponentscore", "location", "scoredifference"))
}
team_filter1(data,"Southern Utah")
#'
#' @return tibble
#'
#' @export
#'
#' @examples
#' team_filter(get_cbb_data(), "Southern Utah")
#' team_filter(get_cbb_data(), "Northern Arizona")
#'
#'
team_filter1 <- function(data, team) {
x <- data
x %>%
filter(home == team | vis == team) %>%
mutate("opponent", ifelse(home == team, vis, home)) %>%
mutate("teamscore", ifelse(home == team, score1, score2)) %>%
mutate("opponentscore",ifelse(home == team, score2, score1)) %>%
mutate("scoredifference", x$teamscore - x$opponentscore) %>%
select(c("date","opponent", "teamscore", "opponentscore", "location", "scoredifference"))
}
team_filter1(data,"Southern Utah")
devtools::uninstall()
devtools::install()
library(devinwcbb)
run_cbb_shiny()
#'
#' @return tibble
#'
#' @export
#'
#' @examples
#' team_filter(get_cbb_data(), "Southern Utah")
#' team_filter(get_cbb_data(), "Northern Arizona")
#'
#'
team_filter <- function(data, team) {
x <- filter(data, home == team | vis == team)
x$opponent <- ifelse(x$home == team, x$vis, x$home)
x$teamscore <- ifelse(x$home == team, x$score1, x$score2)
x$opponentscore <- ifelse(x$home == team, x$score2, x$score1)
x$scoredifference <- x$teamscore - x$opponentscore
x$result <- ifelse(scoredifference > 0, "Win", "Loss")
x[,c("date","opponent", "teamscore", "opponentscore", "location", "scoredifference", "result")]
}
team_filter(get_cbb_data(), "Southern Utah")
#'
#' @return tibble
#'
#' @export
#'
#' @examples
#' team_filter(get_cbb_data(), "Southern Utah")
#' team_filter(get_cbb_data(), "Northern Arizona")
#'
#'
team_filter <- function(data, team) {
x <- filter(data, home == team | vis == team)
x$opponent <- ifelse(x$home == team, x$vis, x$home)
x$teamscore <- ifelse(x$home == team, x$score1, x$score2)
x$opponentscore <- ifelse(x$home == team, x$score2, x$score1)
x$scoredifference <- x$teamscore - x$opponentscore
x$result <- ifelse(x$scoredifference > 0, "Win", "Loss")
x[,c("date","opponent", "teamscore", "opponentscore", "location", "scoredifference", "result")]
}
team_filter(get_cbb_data(), "Southern Utah")
devtools::uninstall()
devtools::install()
library(devinwcbb)
run_cbb_shiny()
