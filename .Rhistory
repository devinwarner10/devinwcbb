mr <- signif(m_r, 3)
data.frame(State = murders$state, Murder_Rate = mr)
x <- murders$state[order(mr)]
x <- murders$state[order(mr, decreasing = TRUE)]
data.frame(States = x, Murders = mr)
y <- order(mr, decreasing = True)
y <- order(mr, decreasing = TRUE)
data.frame(State = x, Murder Rate = y)
data.frame(State = x, Murder_Rate = y)
data.frame(State = x, Murder_Rate = (mr, decreasing = TRUE))
mr[order(mr, decreasing = TRUE)]
y <- mr[order(mr, decreasing = TRUE)]
data.frame(State = x, Murder_Rate = y)
y <- sort(mr)
y
y< sort(mr, decreasing = TRUE)
y <- sort(mr, decreasing = TRue)
y <- sort(mr, decreasing = TRUE)
data.frame(State = x, Murder_Rate = y)
name <- c("Mandi", "Amy", "Nicole", "Olivia")
distance <- c(0.8, 3.1, 2.8, 4.0)
time <- c(10, 30, 40, 50)
time_hours <- time /60
data.frame(Name = name, Time = time_hours)
speed <- distance / time
data.frame(Name = name, Speed = speed)
speed <- distance / time_hours
data.frame(Name = name, Speed = speed)
rm(lists = ls())
rm(list = ls())
murder_rate <- murders$total/murders$population * 100000
data.frame(State = murders$state[sort(murder_rate)], Murder_Rate = sort(murder_rate))
murders$state
murders$state[sort(murder_rate)]
sort(murder_rate)
murder_rate <= 0.71
index <- murder_rate <= 0.71
murders$state[index]
sum(index)
index <- murder_rate <= 0.71 & murders$region = West
index <- murder_rate <= 0.71 & murders$region = west
index <- murder_rate <= 0.71 & murders$region = "West""
h
k
k
k
k
k
k
k
k
1231
ad
stop
stop()
index
adskfj
asdfj
asldjf
sadljf
;sdjfljsal;jf
lajd
lajsd
fljs
a;ldjf
;alsjdf;lasj;lj
a;lj
alsj
f;ljas;lfj;ajls
.
3
4
3
2
3rsdf
""
index <- murder_rate <= 0.71 & murders$region = "West"
index <- (murder_rate <= 0.71 & murders$region = "West")
index <- (murder_rate <= 0.71 &<- murders$region = "West")
index <- (murder_rate <= 0.71 & murders$region == "West")
murders$state[index]
index <- (murder_rate <= 1 & murders$region == "West")
murders$state[index]
murder_rate[2]
murders$state[2]
match(c("Utah", "Wyoming", "Idaho"), murders$state)
x <- c("a", "b", "c", "d", "e")
y<- c("a", "d", "f")
y %in% x
x %in% Y
x %in% y
help("!")
library(dbplyr)
murders <- mutate(murders, rate=total/population*100000)
murders
murders
rm(lists = ls())
rm(list=ls())
rate <- signif(murders$total / murders$population * 100000, 2)
murders
murders_2 <- mutate(murders, rate = rate)
murders_2
rm(list=ls())
murder_rate <- murders$total/murders$population *100000
murders_2 <- filter(murders, state, murder_rate)
murders <- mutate(murders, rate = murder_rate)
murders_2 <- filter(murders, state, rate)
murders_2 <- select(murders, state, rate)
murdres_2
murders_2
filter(murders_2, rate < 0.75)
filter(murders_2, rate <= 1)
sensor_times <- data.frame(Unit = 1:30)
sensor_times <- data.frame(Unit = 1:30,)
sensor_times <- data.frame(Unit = c(1:30), Trial_1 = )
sensor_times <- data.frame(Unit = c(1:30),
Trial_1 = c(56.16, 62.56, 56,58, 58.79, 121.25, 64.26, 52.97, 59.96, 63.16, 66.11, 65.29, 61.8, 16.9, 68.75, 69.15, 71.0, 71.0, 71.59, 62.72, 69.1, 85.62, 62.25, 78.44, 58.94, 59.1, 67.07, 66.06, 63.22, 66.43),
Trial_2 = c(56.83, 57.17, 56.52, 55.27, 52.93, 57.52, 60.55, 58.99, 60.92, 65.03, 66.48, 77.89, 56.77, 65.03, 93.36, 121.61, 59.11, 59.27, 68.36, 110.13, 80.98, 67.69, 67.78,66.27, 60.73, 58.64, 60.8, 66.0, 62.79, 61.19)
)
sensor_times
select(sensor_times, Trial_1, Trial_2)
times <- select(sensor_times, Trial_1, Trial_2)
times <- mutate(times, avg = (Trial_1 + Trial_2)/2)
times
times <- mutate(times, avg = signif(Trial_1 + Trial_2)/2,3)
times
times <- mutate(times, avg = signif((Trial_1 + Trial_2)/2),3)
times
times <- mutate(times, avg = signif((Trial_1 + Trial_2)/2), 3))
times <- mutate(times, avg = signif((Trial_1 + Trial_2)/2), 3)
times
murders
murders_2
rank(murders$state)
rank(murders$total)
rank(-murders$total)
rank(-murders_2$rate)[murders_2$state]
muders_2$state[rank(-murders_2$rate)]
murders_2$state[rank(-murders_2$rate)]
murders$region
times
select(times, Trial_1, Trial_2, avg)
mean(Trial_1)
mean(times$Trial_1)
mean(times$Trial_2)
( mean(times$Trial_1) + mean(times$Trial_2) )/2
avg_unit_time <- ( mean(times$Trial_1) + mean(times$Trial_2) )/2
working_time_sec <- 6.5 * 60 * 60
working_time_sec / avg_unit_time
working_time_sec /280
15 * 3.111
(working_time_sec - 46.67) / 280
(working_time_sec - (46.67 * 60)) / 280
353.98 / 10
/9
times_summary <- data.frame(times %>% Total_Time = c(sum(Trial_1), sum(Trial_2))), Avg_Time = c(mean(Trial_1), mean(Trial 2)))
times_summary <- data.frame(Total_Time = c(sum(Trial_1), sum(Trial_2)), Avg = c(mean(Trial_1), mean(Trial_2)))
imes_summary <- data.frame(times %>% Total_Time = c(sum(Trial_1), sum(Trial_2)), Avg = c(mean(Trial_1), mean(Trial_2)))
times_summary <- times %>% data.frame(Total_Time = c(sum(Trial_1), sum(Trial_2)), Avg = c(mean(Trial_1), mean(Trial_2)))
times_summary <- data.frame(Total_Time = c(sum(times$Trial_1), sum(times$Trial_2)), Avg = c(mean(times$Trial_1), mean(times$Trial_2)))
times_summary
mutate(times, Total_Times /60)
mutate(times, Total_Time /60, Avg /60)
times_summary / 60
times_summary_min <- times_summary /60
population_in_millions <- murders$population/10^6
total_murders <- murders$total
plot(population_in_millions, total_murders)
hist(murders$population)
hist(population_in_millions)
hist(times$Trial_1)
plot(times$Trial_1)
times
library(tidyverse)
library(dslabs)
library(dbplyr)
> sensor_times <- data.frame(Unit = c(1:30),
+ Trial_1 = c(56.16, 62.56, 56,58, 58.79, 121.25, 64.26, 52.97, 59.96, 63.16, 66.11, 65.29, 61.8, 61.9, 68.75, 69.15, 71.0, 71.0, 71.59, 62.72, 69.1, 85.62, 62.25, 78.44, 58.94, 59.1, 67.07, 66.06, 63.22, 66.43),
+ Trial_2 = c(56.83, 57.17, 56.52, 55.27, 52.93, 57.52, 60.55, 58.99, 60.92, 65.03, 66.48, 77.89, 56.77, 65.03, 93.36, 121.61, 59.11, 59.27, 68.36, 110.13, 80.98, 67.69, 67.78,66.27, 60.73, 58.64, 60.8, 66.0, 62.79, 61.19))
> sensor_times <- data.frame(Unit = c(1:30),
+ Trial_1 = c(56.16, 62.56, 56,58, 58.79, 121.25, 64.26, 52.97, 59.96, 63.16, 66.11, 65.29, 61.8, 61.9, 68.75, 69.15, 71.0, 71.0, 71.59, 62.72, 69.1, 85.62, 62.25, 78.44, 58.94, 59.1, 67.07, 66.06, 63.22, 66.43),
+ Trial_2 = c(56.83, 57.17, 56.52, 55.27, 52.93, 57.52, 60.55, 58.99, 60.92, 65.03, 66.48, 77.89, 56.77, 65.03, 93.36, 121.61, 59.11, 59.27, 68.36, 110.13, 80.98, 67.69, 67.78,66.27, 60.73, 58.64, 60.8, 66.0, 62.79, 61.19))
murders
hist(murders$rate)
murders$state[murders$rate < 1]
boxplot(rate~region,data = murders)
murders %>% boxplot(rate~region)
boxplot(murders$rate~murders$region)
boxplot(murders %>% rate~region)
boxplot(region~rate, data = murders)
boxplot(total ~ region, data=murders)
log10(100)
data(heights)
library(dslabs)
data(heights)
optoins(digits = 3)
options(digits = 3)
heights
mean(heights$height)
count(>mean(heights$height))
avg_height <- mean(heights$height)
x > avg_height
class(avg_height)
rm(list=ls())
help(read csv)
help("read.csv")
Netflix <- read.csv("netflix_titles.csv")
library(gdata)
library("gdata")
Netflix <- read.csv("C:Devins-MacBooks-Air\\Desktop\\Kaggle\\netflix_titles.csv")
Netflix <- read.csv("C:Desktop\\Kaggle\\netflix_titles.csv")
Netflix <- read.csv("/Users/devinwarner/Desktop/Kaggle/netflix_titles.csv")
Netflix
variable.names(Netflix)
hist(Netflix$country)
hist(count(Netflix$country))
help()
help(function)
help("function-class")
hist(Netflix$release_year)
Netflix$cast
variable.names(Netflix)
Netflix$title[Netflix$cast == "Denzel Washington"]
Netflix$cast == "Denzel Washington"
"Denzel Washington" in Netflix$cast
Netflix$title[(Netflix$type == Movie) && (Netflix$release_year >= 2018)]
Netflix$title[(Netflix$type == Movie) && (Netflix$release_year >= 2018)]
Netflix$type == Movie
Netflix$title[(Netflix$type == "Movie") && (Netflix$release_year >= 2018)]
Netflix$title[(Netflix$type == Movie) && (Netflix$release_year >= 2019)]
Netflix$title[(Netflix$type == "Movie") && (Netflix$release_year >= 2019)]
Netflix$title[Netflix$release_year = 2020]
Netflix$title[Netflix$release_year == 2020]
data.frame(Title = c(Netflix$title), Director = c(Netflix$director), Release_Date = c(Netflix$release_year))
data.frame(Title = c(Netflix$title), Director = c(Netflix$director), Release_Date = c(Netflix$release_year == 2020))
data.frame(Title = c(Netflix$title[Netflix$release_year == 2020)]), Director = c(Netflix$director[Netflix$release_year == 2020)]), Release_Date = c(Netflix$release_year == 2020))
data.frame(Title = c(Netflix$title[Netflix$release_year == 2020]), Director = c(Netflix$director[Netflix$release_year == 2020]), Release_Date = c(Netflix$release_year == 2020))
data.frame(Title = c(Netflix$title[Netflix$release_year == 2020]), Director = c(Netflix$director[Netflix$release_year == 2020]), Release_Date = c(Netflix$release_year == 2020))
Netflix$title[Netflix$cast == "Denzel Washington"]
Netflix$cast
rm(list = ls())
data(heights)
library(dslabs)
data(heights)
options(digits = 3)
variable.names(heights)
mean(heights$height)
ind <- heights$height > mean(heights$height)
sum(ind)
indf <- heights$sex = "Female"
indf <- heights$sex == "Female"
sum(ind & indf)
mean(indf)
min(heights$height)
match(min(heights$height))
help("match")
match(50, heights$height)
heights$sex[1032]
max(heights$height)
x <- heights$height(50:82)
x<- 50:82
x <- heights$height
help(filter)
x <- filter(heights, height(50:82))
x <- filter(heights, heights$height(50:82))
x<- heights$height %in% (50:82)
x
sum(x)
max(heights$height)
min(heights$height)
y <- 50:82
y %in% x
y %in% heights$height
sum(y %in% heights$height)
(count(y) - sum(y %in% heights$height))
total(y)
help("data.frame")
mutate(heights, ht_cm = heights$height * 2.54)
heights2 <- data.frame(mutate(heights, ht_cm = heights$height * 2.54))
help(mutate)
library(dbplyr)
heights2 <- mutate(heights, ht_cm = heights$height * 2.54)
library(dplyr)
library(dplyr)
heights2 <- mutate(heights, ht_cm = heights$height * 2.54)
heights2[18]
heights2$ht_cm[18]
mean(heights2$ht_cm)
sum(indf)
mean(heights2$ht_cm %in% indf)
mean(heights2$ht_cm %in% heights2$sex = "Female")
mean(heights2$ht_cm %in% heights2$sex == "Female")
mean(heights2$ht_cm[heights2$sex == "Female"])
data(olive)
head(olive)
plot(olive$palmitic, olive$palmitoleic)
hist(olive$eicosenoic)
boxplot(palmitic~region, data = olive)
for(i in 1:25){
print(sum(1:i))
}
v
m <- 50
s_n <- function(n){
print(n*(n+1)/2)
}
v <- (length = m)
for(i in 1:25){
v[i] <- s_n[i]
}
for(i in 1:25){
v[i] <- s_n(i)
}
v
m <- 50
s_n <- function(n){
print(n*(n+1)/2)
}
v <- (length = m)
for(i in 1:m){
v[i] <- s_n(i)
}
v
m <- 50
s_n <- function(n){
n*(n+1)/2
}
v <- (length = m)
for(i in 1:m){
v[i] <- s_n(i)
}
v
plot(v)
for(i in 1:m){
v[i] <- s_n(i)
}
n <- 1:m
plot(n, v)
lines(n, sum(1:n))
for(i in 1:m){
v[i] <- s_n(i)
}
n <- 1:m
plot(n, v)
lines(n, n*(n+1)/2)
help(identical)
library(tidyverse)
library(dslabs)
library(dplyr)
data(murders)
hist(murders$total)
data.frame(State = murders$abb, Murder_Rate = (murders$total/murders$population)*10000)
murder_rate <- (murders$total/murders$population)*10000
murders
murder_rate <- (murders$total/murders$population)*1000
data.frame(State = murders$abb, Murder_Rate = murder_rate)
hist(murder_rate)
murders
hist(murders$total)
murder_rate <- murders$total / murders$population *10000
hist(murder_rate)
netflix
Netflix <- read.csv("/Users/devinwarner/Desktop/Kaggle/netflix_titles.
Netflix <- read.csv("/Users/devinwarner/Desktop/Kaggle/netflix_titles.
Netflix <- read.csv("/Users/devinwarner/Desktop/Kaggle/netflix_titles
Netflix <- read.csv("/Users/devinwarner/Desktop/Kaggle/netflix_titles
Netflix <- read.csv("/Users/devinwarner/Desktop/Kaggle/netflix_titles)
group1 = c(6,7,7,9,11,12,13,15)
group2 = c(9,10,10,12,13,16,19,20)
group3 = c(12,12,16,18,19,21,21,22)
groups = data.frame(cbind(group1, group2, group3))
groups
groups_stacked = stack(groups)
groups_stacked
anova_results = aov(values~ind, data=groups_stacked)
summary(anova_results)
1 + 1
print "Hello World"
5 % 2
5%2
getwd()
barplot(t(data),
main = "Proportion Accepted into Grad Programs",
xlab = "Graduate Program", ylab = "Proportion",
col = c("Blue", "Red"),
ylim=c(-.05,1.05),
legend.text = colnames(data),
beside = TRUE) # Grouped bars
library(ggplot2)
men_accepted <- c(511,352,129,137,53,22)
men_denied <- c(314,208,205,270,138,351)
women_accepted <- c(89,17,202,132,95,24)
women_denied <- c(19,8,391,243,298,317)
programs <- c('A', 'B', 'C', 'D', 'E','F')
prop_men_accepted <- men_accepted / (men_accepted + men_denied)
prop_women_accepted <- women_accepted / (women_accepted + women_denied)
names(prop_men_accepted) <- programs
names(prop_women_accepted) <- programs
prop_men_accepted
prop_women_accepted
data <- data.frame(prop_men_accepted, prop_women_accepted)
barplot(t(data),
main = "Proportion Accepted into Grad Programs",
xlab = "Graduate Program", ylab = "Proportion",
col = c("Blue", "Red"),
ylim=c(-.05,1.05),
legend.text = colnames(data),
beside = TRUE) # Grouped bars
install.packages("~/Desktop/github/dshw/Homework_2/devinwcbb")
library(devinwcbb)
run_cbb_shiny()
library(tidyverse)
library(lubridate)
library(shiny)
run_cbb_shiny()
# data <- get_cbb_data()
ui <- fluidPage(
titlePanel("College Basketball Data"),
sidebarLayout(
sidebarPanel(
selectInput('team', 'Teams', team_list(data),
selected = "Southern Utah")
),
mainPanel(
plotOutput("plot1"),
textOutput("text1"),
dataTableOutput("table1")
)
)
)
server <- function(input, output, session) {
team <- reactive({input$team})
output$text1 <- renderPrint({
team_win_record(data,team(),1)
})
output$plot1 <- renderPlot({
bbgraph(data, team())
})
output$table1 <- renderDataTable({
team_filter(data, team())
})
}
shinyApp(ui = ui, server = server)
data <- get_cbb_data()
# data <- get_cbb_data()
ui <- fluidPage(
titlePanel("College Basketball Data"),
sidebarLayout(
sidebarPanel(
selectInput('team', 'Teams', team_list(data),
selected = "Southern Utah")
),
mainPanel(
plotOutput("plot1"),
textOutput("text1"),
dataTableOutput("table1")
)
)
)
server <- function(input, output, session) {
team <- reactive({input$team})
output$text1 <- renderPrint({
team_win_record(data,team(),1)
})
output$plot1 <- renderPlot({
bbgraph(data, team())
})
output$table1 <- renderDataTable({
team_filter(data, team())
})
}
shinyApp(ui = ui, server = server)
setwd("~/Desktop/github/devinwcbb/")
devtools::install()
devtools::document()
devtools::document()
devtools::uninstall()
devtools::install()
library(devinwcbb)
?all_teams_records
devtools::document()
?all_teams_records
devtools::document()
?get_cbb_data
devtools::document()
devtools::uninstall()
devtools::install()
library(devinwcbb)
run_cbb_shiny
run_cbb_shiny()
library(devinwcbb)
run_cbb_shiny()
.rs.restartR()
devtools::install()
library(devinwcbb)
run_cbb_shiny()
devtools::uninstall()
devtools::install()
library(devinwcbb)
run_cbb_shiny()
devtools::uninstall()
devtools::install()
library(devinwcbb)
run_cbb_shiny()
devtools::uninstall()
devtools::install()
library(devinwcbb)
run_cbb_shiny()
devtools::uninstall()
devtools::install()
library(devinwcbb)
run_cbb_shiny()
